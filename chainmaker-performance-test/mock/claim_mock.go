// Code generated by MockGen. DO NOT EDIT.
// Source: ./parallel/parallel_claim.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	chainmaker_sdk_go "chainmaker.org/chainmaker/sdk-go/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockContinuousClaimPressureTester is a mock of ContinuousClaimPressureTester interface.
type MockContinuousClaimPressureTester struct {
	ctrl     *gomock.Controller
	recorder *MockContinuousClaimPressureTesterMockRecorder
}

// MockContinuousClaimPressureTesterMockRecorder is the mock recorder for MockContinuousClaimPressureTester.
type MockContinuousClaimPressureTesterMockRecorder struct {
	mock *MockContinuousClaimPressureTester
}

// NewMockContinuousClaimPressureTester creates a new mock instance.
func NewMockContinuousClaimPressureTester(ctrl *gomock.Controller) *MockContinuousClaimPressureTester {
	mock := &MockContinuousClaimPressureTester{ctrl: ctrl}
	mock.recorder = &MockContinuousClaimPressureTesterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockContinuousClaimPressureTester) EXPECT() *MockContinuousClaimPressureTesterMockRecorder {
	return m.recorder
}

// ClaimPressureTest mocks base method.
func (m *MockContinuousClaimPressureTester) ClaimPressureTest(arg0 *chainmaker_sdk_go.ChainClient) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClaimPressureTest", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ClaimPressureTest indicates an expected call of ClaimPressureTest.
func (mr *MockContinuousClaimPressureTesterMockRecorder) ClaimPressureTest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClaimPressureTest", reflect.TypeOf((*MockContinuousClaimPressureTester)(nil).ClaimPressureTest), arg0)
}
